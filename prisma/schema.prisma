// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id         Int          @id @default(autoincrement())
  name       String
  slug       String
  enable     Boolean      @default(false)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  user       User         @relation(fields: [createdBy], references: [id])
  createdBy  Int
  TenantUser TenantUser[]
  Token      Token[]
  Resource   Resource[]

  @@unique([slug, enable], name: "uniqueEnabledTenant")
}

model TenantUser {
  id        Int       @id @default(autoincrement())
  tenant    Tenant?   @relation(fields: [tenantId], references: [id])
  user      User?     @relation(fields: [userId], references: [id])
  tenantId  Int?
  userId    Int?
  role      Role      @default(USER)
  joinedAt  DateTime  @default(now())
  deletedAt DateTime?

  @@index([tenantId, userId])
}

model User {
  id              Int          @id @default(autoincrement())
  email           String       @unique
  name            String?
  password        String
  role            Role         @default(USER)
  isEmailVerified Boolean      @default(false)
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  Token           Token[]
  TenantUser      TenantUser[]
  Tenant          Tenant[]
  Resource        Resource[]
  deletedAt       DateTime?
}

model Token {
  id          Int       @id @default(autoincrement())
  token       String
  type        TokenType
  expires     DateTime
  blacklisted Boolean
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  tenant      Tenant?   @relation(fields: [tenantId], references: [id])
  tenantId    Int?
}

model Resource {
  id        Int          @id @default(autoincrement())
  user      User         @relation(fields: [createdBy], references: [id])
  createdBy Int
  tenant    Tenant?      @relation(fields: [tenantId], references: [id])
  tenantId  Int?
  title     String
  type      ResourceType @default(NOTE)
  access    AccessType   @default(PRIVATE)
  pinned    Boolean      @default(false)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  deletedAt DateTime?
  note      Note?

  @@index(tenantId)
  @@index(type)
  @@index(deletedAt)
  @@index(createdAt)
  @@index(updatedAt)
  @@index(createdBy)
  @@index(access)
}

model Note {
  resource   Resource    @relation(fields: [resourceId], references: [id])
  resourceId Int         @unique
  content    String
  delta      Json?
  version    NoteVersion @default(QUILL)
}

enum NoteVersion {
  QUILL
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}

enum AccessType {
  PUBLIC
  TENANT
  PRIVATE
}

enum ResourceType {
  NOTE
}

enum TokenType {
  ACCESS
  REFRESH
  RESET_PASSWORD
  VERIFY_EMAIL
}
